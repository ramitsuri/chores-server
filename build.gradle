plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.5.21"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "com.google.cloud.tools.appengine" version "2.4.2"
}

repositories {
    mavenCentral()
    maven { url "https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven" }
}

mainClassName = "com.ramitsuri.ApplicationKt"
group = "com.ramitsuri"
version = "0.0.19"

appengine {
    stage {
        artifact = "build/libs/${project.name}-${project.version}-all.jar"
    }
    deploy {
        version = "GCLOUD_CONFIG"
        projectId = "GCLOUD_CONFIG"
    }
}

dependencies {
    implementation("io.ktor:ktor-auth-jwt:$ktorVersion")
    implementation("io.ktor:ktor-auth:$ktorVersion")
    implementation("io.ktor:ktor-server-core:$ktorVersion")
    implementation("io.ktor:ktor-locations:$ktorVersion")
    implementation("io.ktor:ktor-gson:$ktorVersion")
    implementation("io.ktor:ktor-server-netty:$ktorVersion")
    implementation("io.ktor:ktor-serialization:$ktorVersion")
    implementation("org.jetbrains.exposed:exposed-core:$exposedVersion")
    implementation("org.jetbrains.exposed:exposed-dao:$exposedVersion")
    implementation("org.jetbrains.exposed:exposed-jdbc:$exposedVersion")
    implementation('org.xerial:sqlite-jdbc:3.36.0.2')
    implementation('org.postgresql:postgresql:42.3.1')
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")

    // Event bus
    implementation ("com.google.guava:guava-gwt:31.0.1-jre")

    // Logging
    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    implementation("ch.qos.logback:logback-core:$logbackVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation ("org.slf4j:slf4j-simple:2.0.7")

    // Hash
    implementation "com.ToxicBakery.library.bcrypt:bcrypt:1.0.9"

    // Firebase
    implementation 'com.google.firebase:firebase-admin:9.1.1'

    // Testing
    testImplementation("io.ktor:ktor-server-tests:$ktorVersion")
    testImplementation("org.jetbrains.kotlin:kotlin-test:$kotlinVersion")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1")
    testImplementation("io.mockk:mockk:1.12.0")
}

test {
    useJUnit()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
